--- src/libOpenImageIO/CMakeLists.txt.orig	2016-03-31 18:07:45 UTC
+++ src/libOpenImageIO/CMakeLists.txt
@@ -230,11 +230,11 @@ source_group ("libutil"    REGULAR_EXPRE
 source_group ("libtexture" REGULAR_EXPRESSION ".+/libtexture/.+")
 
 if (BUILDSTATIC)
-    add_library (OpenImageIO STATIC ${libOpenImageIO_srcs})
+    add_library (OpenImageIO16 STATIC ${libOpenImageIO_srcs})
 else ()
-    add_library (OpenImageIO SHARED ${libOpenImageIO_srcs})
+    add_library (OpenImageIO16 SHARED ${libOpenImageIO_srcs})
 endif ()
-target_link_libraries (OpenImageIO
+target_link_libraries (OpenImageIO16
                            ${VISIBILITY_COMMAND} ${VISIBILITY_MAP_COMMAND}
                            ${Boost_LIBRARIES})
 
@@ -243,7 +243,7 @@ if (USE_FFMPEG AND FFMPEG_FOUND)
     if (VERBOSE)
         message (STATUS "Linking FFmpeg ${FFMPEG_LIBRARIES}")
     endif ()
-    target_link_libraries (OpenImageIO ${FFMPEG_LIBRARIES})
+    target_link_libraries (OpenImageIO16 ${FFMPEG_LIBRARIES})
 endif ()
 
         
@@ -252,38 +252,38 @@ if (USE_OCIO AND OCIO_FOUND)
     if (VERBOSE)
         message (STATUS "Linking OpenColorIO ${OCIO_LIBRARIES}")
     endif ()
-    target_link_libraries (OpenImageIO ${OCIO_LIBRARIES})
+    target_link_libraries (OpenImageIO16 ${OCIO_LIBRARIES})
 endif ()
 
 
 # Include OpenCV if using it
 if (OpenCV_FOUND)
     include_directories (${OpenCV_INCLUDE_DIR})
-    target_link_libraries (OpenImageIO opencv_core opencv_highgui)
+    target_link_libraries (OpenImageIO16 opencv_core opencv_highgui)
 endif ()
 
 # Include OpenSSL if using it
 if (OPENSSL_FOUND)
     include_directories (${OPENSSL_INCLUDE_DIR})
-    target_link_libraries (OpenImageIO ${OPENSSL_LIBRARIES})
+    target_link_libraries (OpenImageIO16 ${OPENSSL_LIBRARIES})
 endif ()
 
 # Include Freetype if using it
 if (FREETYPE_FOUND)
     include_directories (${FREETYPE_INCLUDE_DIRS})
-    target_link_libraries (OpenImageIO ${FREETYPE_LIBRARIES})
+    target_link_libraries (OpenImageIO16 ${FREETYPE_LIBRARIES})
 endif ()
 
 
 
 if (WIN32)
-    target_link_libraries (OpenImageIO psapi.lib)
+    target_link_libraries (OpenImageIO16 psapi.lib)
 endif ()
 
-add_dependencies (OpenImageIO "${CMAKE_CURRENT_SOURCE_DIR}/libOpenImageIO.map")
+add_dependencies (OpenImageIO16 "${CMAKE_CURRENT_SOURCE_DIR}/libOpenImageIO.map")
 
 if (EMBEDPLUGINS)
-    target_link_libraries (OpenImageIO ${PNG_LIBRARIES} ${TIFF_LIBRARIES}
+    target_link_libraries (OpenImageIO16 ${PNG_LIBRARIES} ${TIFF_LIBRARIES}
                                ${JPEG_LIBRARIES}
                                ${FIELD3D_LIBRARY}
                                ${HDF5_LIBRARIES}
@@ -294,24 +294,28 @@ if (EMBEDPLUGINS)
                                ${ZLIB_LIBRARIES}
                           )
     if (USE_GIF AND GIF_FOUND)
-        target_link_libraries (OpenImageIO ${GIF_LIBRARY})
+        target_link_libraries (OpenImageIO16 ${GIF_LIBRARY})
     endif ()
 
     if (USE_LIBRAW AND LIBRAW_FOUND)
-        target_link_libraries (OpenImageIO ${LibRaw_r_LIBRARIES})
+        target_link_libraries (OpenImageIO16 ${LibRaw_r_LIBRARIES})
     endif ()
 endif ()
 
-target_link_libraries (OpenImageIO ${ILMBASE_LIBRARIES})
+if (CMAKE_COMPILER_IS_GNUCXX AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
+    target_link_libraries (OpenImageIO16 atomic)
+endif ()
+
+target_link_libraries (OpenImageIO16 ${ILMBASE_LIBRARIES})
 
 if (USE_EXTERNAL_PUGIXML)
-    target_link_libraries (OpenImageIO ${PUGIXML_LIBRARIES})
+    target_link_libraries (OpenImageIO16 ${PUGIXML_LIBRARIES})
 endif ()
 
 if (VERBOSE)
     message(STATUS "Setting SOVERSION to: ${SOVERSION}")
 endif ()
-set_target_properties(OpenImageIO
+set_target_properties(OpenImageIO16
                          PROPERTIES
                          VERSION ${OIIO_VERSION_MAJOR}.${OIIO_VERSION_MINOR}.${OIIO_VERSION_PATCH}
                          SOVERSION ${SOVERSION}
@@ -323,13 +327,13 @@ if(DEFINED OVERRIDE_SHARED_LIBRARY_SUFFI
   if (VERBOSE)
       message(STATUS "Setting SUFFIX to: ${OVERRIDE_SHARED_LIBRARY_SUFFIX}")
   endif ()
-  set_target_properties(OpenImageIO
+  set_target_properties(OpenImageIO16
                            PROPERTIES
                            SUFFIX ${OVERRIDE_SHARED_LIBRARY_SUFFIX}
                        )
 endif(DEFINED OVERRIDE_SHARED_LIBRARY_SUFFIX)
 
-oiio_install_targets (OpenImageIO)
+oiio_install_targets (OpenImageIO16)
 
 
 # Testing
@@ -348,27 +352,27 @@ if (OIIO_BUILD_TESTS)
 
     add_executable (imagebuf_test imagebuf_test.cpp)
     set_target_properties (imagebuf_test PROPERTIES FOLDER "Unit Tests")
-    target_link_libraries (imagebuf_test OpenImageIO ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
+    target_link_libraries (imagebuf_test OpenImageIO16 ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
     add_test (unit_imagebuf imagebuf_test)
 
     add_executable (imagecache_test imagecache_test.cpp)
     set_target_properties (imagecache_test PROPERTIES FOLDER "Unit Tests")
-    target_link_libraries (imagecache_test OpenImageIO ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
+    target_link_libraries (imagecache_test OpenImageIO16 ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
     add_test (unit_imagecache imagecache_test)
 
     add_executable (imagebufalgo_test imagebufalgo_test.cpp)
     set_target_properties (imagebufalgo_test PROPERTIES FOLDER "Unit Tests")
-    target_link_libraries (imagebufalgo_test OpenImageIO ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
+    target_link_libraries (imagebufalgo_test OpenImageIO16 ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
     add_test (unit_imagebufalgo imagebufalgo_test)
 
     add_executable (imagespec_test imagespec_test.cpp)
     set_target_properties (imagespec_test PROPERTIES FOLDER "Unit Tests")
-    target_link_libraries (imagespec_test OpenImageIO ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
+    target_link_libraries (imagespec_test OpenImageIO16 ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
     add_test (unit_imagespec imagespec_test)
     
     add_executable (imagespeed_test imagespeed_test.cpp)
     set_target_properties (imagespeed_test PROPERTIES FOLDER "Unit Tests")
-    target_link_libraries (imagespeed_test OpenImageIO ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
+    target_link_libraries (imagespeed_test OpenImageIO16 ${Boost_LIBRARIES} ${CMAKE_DL_LIBS})
     #add_test (imagespeed_test imagespeed_test)
 
 endif (OIIO_BUILD_TESTS)
